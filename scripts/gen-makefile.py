#!/usr/bin/env python

import os
import sys

if len(sys.argv)!=2:
	print(f"Usage: {sys.argv[0]} [pdf_previewer]")

pdf_previewer=sys.argv[1]

preamble="""# generated by ./scripts/gen-makefile.py
ifndef optimize
	optimize=yes
endif

ifndef pdfpreviewer
	pdfpreviewer={default_previewer}
endif

OBJ_DIR=./obj
OUT_DIR=./out

LATEX=latexmk -pdf -quiet
LATEX_WATCH=latexmk -pvc -pdf -e '$$pdf_previewer=q[$(pdfpreviewer)];'

ifeq ($(optimize), yes)
	SIZEOPT=pdfsizeopt --do-require-image-optimizers=no --quiet
else
	SIZEOPT=cp
endif

clean:
	rm -rf obj out
""".format(default_previewer=pdf_previewer)

texfile_target="""
{0}-{1}: ./src/{0}/{1}.tex
	@echo "\\e[32m--- Building {0}-{1} ---\\e[0m"
	$(LATEX) -outdir=$(OBJ_DIR)/{0}/{1} ./src/{0}/{1}.tex
	mkdir -p $(OUT_DIR)/{0}
	$(SIZEOPT) $(OBJ_DIR)/{0}/{1}/{1}.pdf $(OUT_DIR)/{0}/{1}.pdf

{0}-{1}-watch:
	$(LATEX_WATCH) -outdir=$(OBJ_DIR)/{0}/{1} ./src/{0}/{1}.tex
"""

subject_all="""
{0}-all: {1}
"""

all_all="""
all: {0}

default: all
"""

texfiles = {"analysis":[], "geometry":[], "algebra":[]}

for subject in texfiles.keys():
    for file in os.listdir(os.path.join("./src", subject)):
        ticket_number=file[:-4]
        if ticket_number.isnumeric():
            texfiles[subject].append(int(ticket_number))
    texfiles[subject].sort()

makefile=""

#  defining variables
makefile += preamble

for subject in texfiles.keys():
    for file in texfiles[subject]:
        makefile += texfile_target.format(subject, file)

#  generating targets
for subject in texfiles.keys():
    makefile +=subject_all.format(subject, " ".join(map(lambda ticket:f"{subject}-{ticket}",texfiles[subject])))

makefile += all_all.format(" ".join(map(lambda subject: f"{subject}-all", texfiles.keys())))

makefile_file = open("Makefile", "w")
makefile_file.write(makefile)
makefile_file.close()
